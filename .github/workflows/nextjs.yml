name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install_cmd=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "build_cmd=build" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install_cmd=ci" >> $GITHUB_OUTPUT
            echo "build_cmd=build" >> $GITHUB_OUTPUT
            echo "runner=npm run" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
          enablement: true   # ← Pages をリポジトリ側で有効化

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect.outputs.manager }} ${{ steps.detect.outputs.install_cmd }}

      - name: Build (Next.js export)
        env:
          # あなたの API Gateway のベースURLを Secrets に設定しておく
          NEXT_PUBLIC_API_BASE: ${{ secrets.NEXT_PUBLIC_API_BASE }}
          # （任意）プロジェクトサイトの場合のみ使う人向け。next.config で参照しているなら有効化
          # NEXT_PUBLIC_GHP_REPO: ${{ github.event.repository.name }}
        run: ${{ steps.detect.outputs.runner }} ${{ steps.detect.outputs.build_cmd }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out   # next.config で output:'export' なら out/ に静的成果物

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
